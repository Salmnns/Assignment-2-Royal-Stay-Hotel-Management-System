# -*- coding: utf-8 -*-
"""test case code

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_nMdl1MbKg6889J27qHvuuBlyuQkgcG9
"""

# MAIN TEST CODE
def generate_id():
    """Generate a unique ID."""
    return str(uuid.uuid4())[:8]

def main():
    """Main function to test the Hotel Management System."""
    print("Royal Stay Hotel Management System\n")

    # Test Case 1: Guest Account Creation
    print("\n=== Test Case 1: Guest Account Creation ===")

    # Create first guest
    guest1 = Guest("Salma Almansoori", "salma.almansoori@example.com", "555-123-4567", "123 Main St, City")
    guest1.set_guest_id(generate_id())
    guest1.set_loyalty_status(LoyaltyStatus.ACTIVE)
    print(f"Created guest: {guest1}")

    # Create second guest
    guest2 = Guest("Mohamed Almansoori", "mohamed.almansoori@example.com", "555-987-6543", "456 West Abc, Town")
    guest2.set_guest_id(generate_id())
    print(f"Created guest: {guest2}")

    # Test Case 2: Room Creation
    print("\n=== Test Case 2: Room Creation ===")

    # Create single room
    single_room = Room("101", RoomType.SINGLE, [Amenity.WIFI, Amenity.TV], 100.0, 1)
    print(f"Created room: {single_room}")

    # Create deluxe room
    deluxe_room = Room("201", RoomType.DELUXE, [Amenity.WIFI, Amenity.TV, Amenity.AIRCON, Amenity.BALCONY], 250.0, 4)
    print(f"Created room: {deluxe_room}")

    # Test Case 3: Making a Room Reservation
    print("\n=== Test Case 3: Making a Room Reservation ===")

    # Book single room for guest1
    check_in1 = datetime.now() + timedelta(days=7)
    check_out1 = datetime.now() + timedelta(days=10)
    booking1 = Booking(guest1, single_room, check_in1, check_out1)
    booking1.set_booking_id(generate_id())
    booking1.confirm_booking()
    print(f"Created booking: {booking1}")

    # Book deluxe room for guest2
    check_in2 = datetime.now() + timedelta(days=14)
    check_out2 = datetime.now() + timedelta(days=21)
    booking2 = Booking(guest2, deluxe_room, check_in2, check_out2)
    booking2.set_booking_id(generate_id())
    booking2.confirm_booking()
    print(f"Created booking: {booking2}")

    # Test Case 4: Payment Processing
    print("\n=== Test Case 4: Payment Processing ===")

    # Process payment for booking1
    payment1 = Payment(booking1, booking1.get_total_amount(), PaymentMethod.CREDIT_CARD)
    payment1.set_payment_id(generate_id())
    payment1.process_payment()
    print(f"Processed payment: {payment1}")
    print(payment1.generate_receipt())

    # Process payment for booking2
    payment2 = Payment(booking2, booking2.get_total_amount(), PaymentMethod.MOBILE_WALLET)
    payment2.set_payment_id(generate_id())
    payment2.process_payment()
    print(f"Processed payment: {payment2}")

    # Test Case 5: Invoice Generation
    print("\n=== Test Case 5: Invoice Generation ===")

    # Generate invoice for booking1
    invoice1 = Invoice(booking1)
    invoice1.set_invoice_id(generate_id())
    invoice1.add_charge("Room Service - Breakfast", 25.0)
    invoice1.apply_discount(10.0)  # Apply $10 discount
    print(invoice1.generate_invoice())

    # Generate invoice for booking2
    invoice2 = Invoice(booking2)
    invoice2.set_invoice_id(generate_id())
    invoice2.add_charge("Spa Service", 120.0)
    invoice2.add_charge("Airport Transfer", 50.0)
    print(invoice2.generate_invoice())

    # Test Case 6: Loyalty Program
    print("\n=== Test Case 6: Loyalty Program ===")

    # Create loyalty program for guest1
    loyalty1 = LoyaltyProgram(guest1)
    loyalty1.earn_points(booking1)
    print(f"Loyalty program: {loyalty1}")

    # Redeem points
    loyalty1.redeem_points(50)
    print(f"After redemption: {loyalty1}")

    # Test Case 7: Service Requests
    print("\n=== Test Case 7: Service Requests ===")

    # Create service request for guest1
    service1 = Service(ServiceType.ROOM_SERVICE, "Breakfast delivery at 8am", guest1, single_room)
    service1.set_service_id(generate_id())
    service1.assign_staff("Employee001")
    service1.update_status(ServiceStatus.IN_PROGRESS)
    print(f"Service request: {service1}")

    # Create service request for guest2
    service2 = Service(ServiceType.TRANSPORTATION, "Airport pickup on arrival", guest2, deluxe_room)
    service2.set_service_id(generate_id())
    print(f"Service request: {service2}")

    # Test Case 8: Review Submission
    print("\n=== Test Case 8: Review Submission ===")

    # Submit review for booking1
    review1 = Review(guest1, booking1, 5, "Excellent service and comfortable room!")
    review1.set_review_id(generate_id())
    print(f"Review: {review1}")

    # Try to submit an invalid review
    try:
        review2 = Review(guest2, booking2, 6, "Rating out of range")
    except ValueError as e:
        print(f"Error: {e}")

    review2 = Review(guest2, booking2, 4, "Good experience, but the spa was a bit crowded.")
    review2.set_review_id(generate_id())
    print(f"Review: {review2}")

    # Test Case 9: Booking Cancellation
    print("\n=== Test Case 9: Booking Cancellation ===")

    # Create a new booking to cancel
    check_in3 = datetime.now() + timedelta(days=30)
    check_out3 = datetime.now() + timedelta(days=35)
    booking3 = Booking(guest1, deluxe_room, check_in3, check_out3)
    booking3.set_booking_id(generate_id())
    booking3.confirm_booking()
    print(f"Created booking: {booking3}")

    # Cancel the booking
    result = booking3.cancel_booking()
    print(f"Booking cancelled: {result}")
    print(f"Updated booking: {booking3}")

if __name__ == "__main__":
    main()